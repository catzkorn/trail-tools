// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package users

import (
	"context"
)

const getUser = `-- name: GetUser :one
INSERT INTO users (
  oidc_subject
) VALUES (
  $1
)
ON CONFLICT (oidc_subject) DO UPDATE set oidc_subject = EXCLUDED.oidc_subject
RETURNING id, create_time, oidc_subject
`

// Note: we don't actually need to update anything, but if we don't,
// the query doesn't return the row.
func (q *Queries) GetUser(ctx context.Context, oidcSubject string) (User, error) {
	row := q.db.QueryRow(ctx, getUser, oidcSubject)
	var i User
	err := row.Scan(&i.ID, &i.CreateTime, &i.OidcSubject)
	return i, err
}
